# numpy 연습문제
import numpy as np

'''
연습 문제1

주어진 벡터의 각 요소에 5를 더한 새로운 벡터를 생성하세요
'''
a = np.array([1, 2, 3, 4, 5])
a += 5


'''
연습 문제2

주어진 벡터의 홀수 번째 요소만 추출하여 새로운 벡터를 생성하세요
'''
a = np.array([12, 21, 35, 48, 5])
a[a % 2 == 1]

'''
연습 문제3

주어진 벡터에서 최대값을 찾으세요
'''
a = np.array([1, 22, 93, 64, 54])
a[a == a.max()]

'''
연습 문제4

주어진 벡터에서 중복된 값을 제거한 새로운 벡터를 생성하세요
'''
a = np.array([1, 2, 3, 2, 4, 5, 4, 6])
np.unique(a)

'''
연습 문제5

주어진 두 벡터의 요소를 번갈아 가면서 합쳐서 새로운 벡터를 생성하세요

결과: array([21, 24, 31, 44, 58, 67])
'''
a = np.array([21, 31, 58])
b = np.array([24, 44, 67])
c = np.zeros(a.size + b.size)
c[::2] = a
c[1::2] = b
c

'''
연습 문제6

다음 a 벡터의 마지막 값은 제외한 두 벡터 a와 b를 더한 결과를 구하세요

'''
a = np.array([1, 2, 3, 4, 5])
b = np.array([6, 7, 8, 9])
a[:-1] + b


'''
연습 문제8

주어진 벡터에서 3의 배수만 추출한 새로운 벡터를 만드세요

'''
a = np.array([12, 5, 18, 21, 7, 9, 30, 25, 3, 6])
a[a % 3 == 0]


'''
연습 문제9

주어진 벡터를 중앙값을 기준으로 두 개의 벡터로 분리하세요

'''
a = np.array([10, 20, 5, 7, 15, 30, 25, 8])
a[np.median(a) >= a]
a[np.median(a) < a]


'''
연습 문제10

주어진 벡터에서 중앙값과 가장 가까운 값을 찾으시오

'''
a = np.array([12, 45, 8, 20, 33, 50, 19])

nearest = np.argmin(abs(a - np.median(a)))
a[nearest]


'''
연습 문제11

다음과 같은 행렬 A를 만들어 보세요

## 행렬 A:
## [[3 5 7]
## [2 3 6]]
'''

a = np.array([[3, 5, 7], [2, 3, 6]])


'''
연습 문제12
다음과 같이 행렬 B가 주어졌을 때
2번째 4번째 5번째 행 만을 선택하여 3 by 4 행렬을 만들어보세요

## 행렬 B:
## [[ 8 10 7 8]
## [ 2 4 5 5]
## [ 7 6 1 7]
## [ 2 6 8 6]
## [ 9 3 4 2]]
'''
b = np.array([[8, 10, 7, 8], [2, 4, 5, 5], [7, 6, 1, 7], [2, 6, 8, 6], [9, 3, 4, 2]])
b[[1, 3, 4], :]


'''
연습 문제 13

연습 문제2에서 주어진 행렬B에서3번째 열의 값이3보다 큰 행들만 골라내 보세요

'''
b[b[:, 2] > 3, :]


'''
연습 문제 14
주어진 행렬B의 행별로 합계를 내고 싶을 때 rowSums() 함수를 사용

각 행 별 합이20보다 크거나 같은 행 만을 걸러내어 새로운 행렬을 작성해보세요

'''
row_sums = np.sum(b, axis=1)
b[row_sums >= 20, :]


'''
연습 문제 15
원래 주어진 행렬 B에서 
각 열별 평균이 5보다 크거나 같은 열이 몇 번째 열에 위치하는지
np.mean() 함수를 사용하여 알아내는 코드를 작성해보세요

'''

col_means = np.mean(b, axis=0)
np.where(col_means >= 5)[0]


'''
연습 문제 16

행렬B의 각 행에 7보다 큰 숫자가 하나라도 들어있는 행을 
걸러내는 코드를 작성해 주세요

'''
b[np.any(b > 7, axis=1), :]
